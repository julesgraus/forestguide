/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/ForestGuide.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/ActionProcessor.js":
/*!***********************************!*\
  !*** ./src/js/ActionProcessor.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActionProcessor; });\n/* harmony import */ var _models_GuideModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/GuideModel */ \"./src/js/models/GuideModel.js\");\n/* harmony import */ var _models_ActionModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/ActionModel */ \"./src/js/models/ActionModel.js\");\n/* harmony import */ var _Activator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Activator */ \"./src/js/Activator.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n//Models\n\n //Other controllers\n\n\n/**\r\n * @class ActionProcessor\r\n *\r\n * The action processor receives a second from the tick method,\r\n * and scans the guide for cues that need to be activated or deactivated.\r\n * Then activates or deactivates cues which results in them triggering actions which\r\n * cause side effects in your browser. For example blink the border on an element.\r\n *\r\n * Activation and deactivation takes place by using the Activator class.\r\n */\n\nvar ActionProcessor =\n/*#__PURE__*/\nfunction () {\n  function ActionProcessor() {\n    _classCallCheck(this, ActionProcessor);\n\n    this._guide = null;\n    this._activeCueIds = []; //Holds the ids of cues wherein the seconds from the tick methods falls in.\n\n    this._cueIdsToActivate = []; //Holds the ids of cues that needs to be activated\n\n    this._cueIdsToDeactivate = []; //Holds the ids of cues that need to be deactivated\n\n    this._activator = new _Activator__WEBPACK_IMPORTED_MODULE_2__[\"default\"](); //Knows how to create actions\n  }\n  /**\r\n   * Load a guide to play the actions for\r\n   *\r\n   * @param {GuideModel} guide\r\n   */\n\n\n  _createClass(ActionProcessor, [{\n    key: \"loadGuide\",\n    value: function loadGuide(guide) {\n      if (!guide instanceof _models_GuideModel__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        console.error('The actionprocessor only accepts an instance of the Guide class. Something else was given');\n        return;\n      }\n\n      this._guide = guide;\n    }\n    /**\r\n     * Deactivate all cues and their actions\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      self = this;\n      this._cueIdsToActivate = [];\n      this._cueIdsToDeactivate = [];\n\n      this._activeCueIds.forEach(function (cueId) {\n        self._cueIdsToDeactivate.push(cueId);\n      });\n\n      this._deactivateCues();\n\n      this._activeCueIds = [];\n      this._cueIdsToDeactivate = [];\n    }\n    /**\r\n     * Check if one of the guides actions should be executed or stopped,\r\n     * depending on what the guide says in combination with the given current\r\n     * time in seconds.\r\n     *\r\n     * @param {number} seconds\r\n     */\n\n  }, {\n    key: \"tick\",\n    value: function tick(seconds) {\n      if (!this._guide) return;\n      var self = this; //Put cues that need to be activated in the _cuesToActivate array.\n      //And the ones that need to be deactivated in the _cuesToDeactivate array\n\n      this._guide.cues.forEach(\n      /**\r\n       * @param {CueModel} cue\r\n       * @param {number} index\r\n       */\n      function (cue, index) {\n        var activeCuesIdIndex = self._activeCueIds.indexOf(index);\n\n        var cuesToActivateIdIndex = self._cueIdsToActivate.indexOf(index);\n\n        var cuesToDeactivateIdIndex = self._cueIdsToDeactivate.indexOf(index);\n\n        if (seconds >= cue.start && seconds <= cue.end) {\n          if (activeCuesIdIndex !== -1 || cuesToActivateIdIndex !== -1 || cuesToDeactivateIdIndex !== -1) return; //Only mark to be activated when the cue was not active, to be activated or deactivated\n\n          self._cueIdsToActivate.push(index);\n        } else if (seconds > cue.end || seconds < cue.start) {\n          if (activeCuesIdIndex === -1 || cuesToDeactivateIdIndex !== -1) return; //Only mark the cue to be deactivated when it is active or is not marked as\n          //Cue is active and outside of the start and end time of the cue.\n\n          self._cueIdsToDeactivate.push(index);\n        }\n      });\n\n      this._deactivateCues();\n\n      this._activateCues();\n    }\n    /**\r\n     * Activates cues that need to be activated\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_activateCues\",\n    value: function _activateCues() {\n      var self = this;\n      var cueId;\n\n      while (typeof (cueId = this._cueIdsToActivate.pop()) === \"number\") {\n        var cue = self._guide.cues[cueId];\n        cue.actions.forEach(\n        /**\r\n         * @param {ActionModel} action\r\n         */\n        function (action) {\n          self._activateAction(action);\n        }); //Add the cue to the _activeCueIds\n\n        self._activeCueIds.push(cueId);\n      }\n    }\n    /**\r\n     * Deactivates cues that need to be deactivated\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_deactivateCues\",\n    value: function _deactivateCues() {\n      var self = this;\n      var cueId;\n\n      while (typeof (cueId = this._cueIdsToDeactivate.pop()) === \"number\") {\n        var cue = self._guide.cues[cueId];\n        cue.actions.forEach(\n        /**\r\n         * @param {ActionModel} action\r\n         */\n        function (action) {\n          self._deactivateAction(action);\n        }); //Remove the cue id from the _activeCueIds\n\n        self._activeCueIds.splice(self._activeCueIds.indexOf(cueId), 1);\n      }\n    }\n    /**\r\n     * @param {ActionModel} action\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_activateAction\",\n    value: function _activateAction(action) {\n      this._activator.activate(action);\n    }\n    /**\r\n     * @param {ActionModel} action\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_deactivateAction\",\n    value: function _deactivateAction(action) {\n      this._activator.deactivate(action);\n    }\n  }]);\n\n  return ActionProcessor;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/ActionProcessor.js?");

/***/ }),

/***/ "./src/js/Activator.js":
/*!*****************************!*\
  !*** ./src/js/Activator.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Activator; });\n/* harmony import */ var _actions_AddClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/AddClass */ \"./src/js/actions/AddClass.js\");\n/* harmony import */ var _actions_ScrollToElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./actions/ScrollToElement */ \"./src/js/actions/ScrollToElement.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n/**\r\n * Activator. Knows how to activate and deactivate actions\r\n */\n\nvar Activator =\n/*#__PURE__*/\nfunction () {\n  function Activator() {\n    _classCallCheck(this, Activator);\n  }\n\n  _createClass(Activator, [{\n    key: \"_do\",\n\n    /**\r\n     * Activates or deactivates an action\r\n     *\r\n     * @param {string} name\r\n     * @param {object} options\r\n     * @param {string} method either activate or deactivate.\r\n     * @private\r\n     */\n    value: function _do(name, options, method) {\n      var action;\n\n      switch (name.toLowerCase()) {\n        case 'addclass':\n          if (!this._verifyAction(_actions_AddClass__WEBPACK_IMPORTED_MODULE_0__[\"default\"], 'AddClass')) break;\n          _actions_AddClass__WEBPACK_IMPORTED_MODULE_0__[\"default\"][method](options);\n          break;\n\n        case 'scrolltoelement':\n          if (!this._verifyAction(_actions_ScrollToElement__WEBPACK_IMPORTED_MODULE_1__[\"default\"], 'scrollToElement')) break;\n          _actions_ScrollToElement__WEBPACK_IMPORTED_MODULE_1__[\"default\"][method](options);\n          break;\n      }\n    }\n    /**\r\n     * @param {ActionModel} action\r\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(action) {\n      this._do(action.name, action.options, 'activate');\n    }\n    /**\r\n     * @param {ActionModel} action\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(action) {\n      this._do(action.name, action.options, 'deactivate');\n    }\n    /**\r\n     * Verifies that an so called action really is one.\r\n     * If it is, it returns true. false otherwise.\r\n     *\r\n     * @param action\r\n     * @param {string} name\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_verifyAction\",\n    value: function _verifyAction(action, name) {\n      if (!action.hasOwnProperty('activate') || !action.hasOwnProperty('deactivate') || typeof action.activate !== 'function' || typeof action.deactivate !== 'function') {\n        console.error('ActionFactory: The action called \"' + name + '\" was not really an action because it did not have both the activate and deactivate methods.');\n        return false;\n      }\n\n      return action;\n    }\n  }]);\n\n  return Activator;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/Activator.js?");

/***/ }),

/***/ "./src/js/AudioPlayer.js":
/*!*******************************!*\
  !*** ./src/js/AudioPlayer.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AudioPlayer; });\n/* harmony import */ var _CallbackMapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CallbackMapper */ \"./src/js/CallbackMapper.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\r\n * Knows how to play and work with audio.\r\n *\r\n * Note: Currently it is not possible to properly track the current play time correctly. Therefore we don't use the player for now.\r\n */\n\nvar AudioPlayer =\n/*#__PURE__*/\nfunction () {\n  function AudioPlayer() {\n    _classCallCheck(this, AudioPlayer);\n\n    this._callbackMapper = new _CallbackMapper__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this._audio = null;\n    this._requestedPlay = false;\n    this._ignoreNextPauseForStop = false;\n    this._urlToLoad = null;\n    this._urlLoaded = false;\n  }\n  /**\r\n   * Attaches listeners to audio\r\n   *\r\n   * @private\r\n   */\n\n\n  _createClass(AudioPlayer, [{\n    key: \"_enableListeners\",\n    value: function _enableListeners() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this._audio) return null;\n\n      this._audio.removeEventListener('loadstart', this._loadStartHandler.bind(this));\n\n      this._audio.removeEventListener('durationchange', this._durationChangeHandler.bind(this));\n\n      this._audio.removeEventListener('loadedmetadata', this._loadedMetadataHandler.bind(this));\n\n      this._audio.removeEventListener('loadeddata', this._loadedDataHandler.bind(this));\n\n      this._audio.removeEventListener('progress', this._progressHandler.bind(this));\n\n      this._audio.removeEventListener('canplay', this._canPlayHandler.bind(this));\n\n      this._audio.removeEventListener('canplayTrough', this._canPlayTroughHandler.bind(this));\n\n      this._audio.removeEventListener('error', this._errorHandler.bind(this));\n\n      this._audio.removeEventListener('pause', this._pauseHandler.bind(this));\n\n      this._audio.removeEventListener('play', this._playHandler.bind(this));\n\n      this._audio.removeEventListener('timeupdate', this._timeUpdateHandler.bind(this));\n\n      this._audio.removeEventListener('ended', this._endedHandler.bind(this));\n\n      if (enable) {\n        this._audio.addEventListener('loadstart', this._loadStartHandler.bind(this));\n\n        this._audio.addEventListener('durationchange', this._durationChangeHandler.bind(this));\n\n        this._audio.addEventListener('loadedmetadata', this._loadedMetadataHandler.bind(this));\n\n        this._audio.addEventListener('loadeddata', this._loadedDataHandler.bind(this));\n\n        this._audio.addEventListener('progress', this._progressHandler.bind(this));\n\n        this._audio.addEventListener('canplay', this._canPlayHandler.bind(this));\n\n        this._audio.addEventListener('canplayTrough', this._canPlayTroughHandler.bind(this));\n\n        this._audio.addEventListener('error', this._errorHandler.bind(this));\n\n        this._audio.addEventListener('pause', this._pauseHandler.bind(this));\n\n        this._audio.addEventListener('play', this._playHandler.bind(this));\n\n        this._audio.addEventListener('timeupdate', this._timeUpdateHandler.bind(this));\n\n        this._audio.addEventListener('ended', this._endedHandler.bind(this));\n      }\n    }\n    /**\r\n     * Event handler for when loading of the audio begins.\r\n     *\r\n     * @param {ProgressEvent} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_loadStartHandler\",\n    value: function _loadStartHandler(event) {\n      if (!this._audio) return null;\n\n      this._callbackMapper.trigger('loading');\n    }\n    /**\r\n     * Event handler for when the metadata has loaded or changed, indicating a change in duration of the media.\r\n     * This is sent, for example, when the media has loaded enough that the duration is known.\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_durationChangeHandler\",\n    value: function _durationChangeHandler(event) {\n      if (!this._audio) return null;\n    }\n    /**\r\n     * Event handler for when when the metadata has been loaded.\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_loadedMetadataHandler\",\n    value: function _loadedMetadataHandler(event) {\n      if (!this._audio) return null;\n    }\n    /**\r\n     * Event handler for when the first frame of the media has finished loading.\r\n     * Note that this event will not fire in mobile/tablet devices if data-saver is on in browser settings.\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_loadedDataHandler\",\n    value: function _loadedDataHandler(event) {\n      if (!this._audio) return null;\n    }\n    /**\r\n     * Event handler for when event is fired to indicate that an operation is in progress.\r\n     * Sent periodically to inform interested parties of progress downloading the media.\r\n     * Information about the current amount of the media that has been downloaded is available in\r\n     * the media element's (this._audio) buffered attribute.\r\n     *\r\n     * @param {ProgressEvent} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_progressHandler\",\n    value: function _progressHandler(event) {\n      if (!this._audio) return null;\n    }\n    /**\r\n     * Event handler for when enough data is available that the media can be played,\r\n     * at least for a couple of frames. This corresponds to the HAVE_ENOUGH_DATA readyState\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_canPlayHandler\",\n    value: function _canPlayHandler(event) {\n      if (!this._audio) return null;\n\n      if (this._requestedPlay === true) {\n        this._requestedPlay = false;\n\n        this._audio.play();\n\n        this._callbackMapper.trigger('play');\n      }\n\n      this._urlLoaded = true;\n\n      this._callbackMapper.trigger('canPlay');\n    }\n    /**\r\n     * Event handler for when the ready state changes to CAN_PLAY_THROUGH,\r\n     * indicating that the entire media can be played without interruption,\r\n     * assuming the download rate remains at least at the current level.\r\n     * It will also be fired when playback is toggled between paused and playing.\r\n     * Note: Manually setting the currentTime will eventually fire a canplaythrough event in firefox.\r\n     * Other browsers might not fire this event.\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_canPlayTroughHandler\",\n    value: function _canPlayTroughHandler(event) {\n      if (!this._audio) return null;\n    }\n    /**\r\n     * Event handler for when an error occurs.  The element's error attribute contains more information\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_errorHandler\",\n    value: function _errorHandler(event) {\n      if (!this._audio) return null;\n      console.error('AudioPlayer:error An error occured: ', this._audio.error);\n    }\n    /**\r\n     * Event handler for when the playback state is no longer paused,\r\n     * as a result of the play method, or the autoplay attribute.\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_playHandler\",\n    value: function _playHandler(event) {\n      if (!this._audio) return null;\n\n      this._callbackMapper.trigger('play');\n    }\n    /**\r\n     * Event handler for when the playback state is changed to paused (paused property is true).\r\n     *\r\n     * @param {Event} event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_pauseHandler\",\n    value: function _pauseHandler(event) {\n      if (!this._audio) return null;\n\n      if (this._ignoreNextPauseForStop) {\n        this._ignoreNextPauseForStop = false;\n        return;\n      } //A stop was triggered. That's a pause followed by setDuration = 0. We ignore this pause in such situations\n\n\n      this._callbackMapper.trigger('pause');\n    }\n    /**\r\n     * When the time indicated by the currentTime attribute has been updated.\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_timeUpdateHandler\",\n    value: function _timeUpdateHandler(event) {\n      if (!this._audio || !this.isPlaying()) return null;\n\n      this._callbackMapper.trigger('playProgress');\n    }\n    /**\r\n     * Event handler for when the media has finished playing\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_endedHandler\",\n    value: function _endedHandler(event) {\n      if (!this._audio) return null;\n\n      this._callbackMapper.trigger('finish');\n    }\n    /**\r\n     * Triggered when loading has started\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onLoading\",\n    value: function onLoading(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('loading', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has loaded enough to trigger playing\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onCanPlay\",\n    value: function onCanPlay(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('canPlay', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has begun playing\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onPlay\",\n    value: function onPlay(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('play', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has been paused\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onPause\",\n    value: function onPause(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('pause', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has been stopped\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onStopped\",\n    value: function onStopped(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('stop', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has progressed in play duration\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onPlayProgress\",\n    value: function onPlayProgress(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('playProgress', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Triggered when the audio has finished playing\r\n     *\r\n     * @param callback\r\n     * @param args\r\n     * @return AudioPlayer\r\n     */\n\n  }, {\n    key: \"onFinish\",\n    value: function onFinish(callback) {\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      this._callbackMapper.on('finish', callback, args);\n\n      return this;\n    }\n    /**\r\n     * Clear system resources\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      if (!this._audio) return null;\n      this.stop();\n\n      this._enableListeners(false);\n    }\n    /**\r\n     * Stops playback\r\n     *\r\n     * @return {null}\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this._audio) return null;\n      this._ignoreNextPauseForStop = true; //Prevent pause event from being processed\n\n      this._audio.pause();\n\n      this._audio.currentTime = 0;\n\n      this._callbackMapper.trigger('stop');\n    }\n    /**\r\n     * @param {string} soundUrl\r\n     *\r\n     * Returns a Promise that resolves with the player instance. Or rejects with an error message\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(soundUrl) {\n      if (this._urlToLoad === soundUrl && this._urlLoaded === true) {\n        // console.log('Warning: Already loaded '+soundUrl+'. Not loading again.');\n        return;\n      } //We already loaded the url.\n\n\n      this._urlToLoad = soundUrl;\n\n      if (typeof soundUrl !== \"string\") {\n        console.error('Player: Could not play the sound because the url wasn\\'t a string.');\n        return;\n      }\n\n      this._reset();\n\n      this._createNewAudioObject(soundUrl);\n\n      this._enableListeners();\n    }\n    /**\r\n     * Create a new audio object\r\n     * @param soundUrl\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_createNewAudioObject\",\n    value: function _createNewAudioObject(soundUrl) {\n      this._audio = null;\n      this._audio = new Audio(soundUrl);\n    }\n    /**\r\n     * Requests to play the sound as soon as it is loaded\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (!this._audio) return null;\n      this._requestedPlay = true;\n      if (this._urlLoaded) this._canPlayHandler(null); //Because the url is loaded it won't trigger the _canPlayHandler. So we do it manually. The handler will play the sound.\n    }\n    /**\r\n     * Pause the audio\r\n     *\r\n     * @return {null}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (!this._audio) return null;\n\n      this._audio.pause();\n    }\n    /**\r\n     * Sets the current time in seconds from where to play from\r\n     *\r\n     * @param {number} time\r\n     */\n\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(time) {\n      if (!this._audio) return null;\n\n      if (typeof time !== \"number\") {\n        console.error('AudioPlayer:setCurrentTime Did not receive a number. It must be the number of seconds you want to play from');\n      }\n    }\n    /**\r\n     * Gets the current time in seconds from where to play from\r\n     *\r\n     * @return {number}\r\n     */\n\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      if (!this._audio) return 0;\n      return this._audio.currentTime;\n    }\n    /**\r\n     * Detect whether or not audio is playing or not\r\n     *\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"isPlaying\",\n    value: function isPlaying() {\n      return !!(this._audio && this._audio.currentTime > 0 && !this._audio.paused && !this._audio.ended && this._audio.readyState > 2);\n    }\n  }]);\n\n  return AudioPlayer;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/AudioPlayer.js?");

/***/ }),

/***/ "./src/js/CallbackMapper.js":
/*!**********************************!*\
  !*** ./src/js/CallbackMapper.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CalbackMapper; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Registers actions and can map those to callbacks.\r\n *\r\n * It provides methods to trigger actions that trigger callbacks.\r\n * It also provides methods to register those callbacks\r\n */\nvar CalbackMapper =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * CallbackMapper constructor\r\n   */\n  function CalbackMapper() {\n    _classCallCheck(this, CalbackMapper);\n\n    this._callbackMap = {};\n    this._argsMap = {};\n  }\n  /**\r\n   * Registers a callback to an action that you can trigger with the trigger method.\r\n   * You can also pass in arguments to pass into the callback when it is being triggered.\r\n   *\r\n   * @param  {string} action\r\n   * @param {function} callback\r\n   * @param {array} args\r\n   */\n\n\n  _createClass(CalbackMapper, [{\n    key: \"on\",\n    value: function on(action, callback) {\n      var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      if (typeof action !== \"string\") {\n        console.error('CallbackMapper: not registering callback since the action is not a string');\n        return;\n      }\n\n      if (typeof callback !== \"function\") {\n        console.error('CallbackMapper: not registering callback since the callback is not a function');\n        return;\n      }\n\n      if (!Array.isArray(args)) {\n        console.error('CallbackMapper: not registering callback since the args parameter is not an array');\n        return;\n      }\n\n      if (!this._callbackMap.hasOwnProperty(action)) this._callbackMap[action] = [];\n      if (!this._argsMap.hasOwnProperty(action)) this._argsMap[action] = [];\n\n      this._callbackMap[action].push(callback);\n\n      this._argsMap[action].push(args);\n    }\n    /**\r\n     * @param {string} action\r\n     */\n\n  }, {\n    key: \"trigger\",\n    value: function trigger(action) {\n      if (typeof action !== \"string\") {\n        console.error('CallbackMapper: not triggering callback since the action is not a string');\n        return;\n      }\n\n      if (!this._callbackMap.hasOwnProperty(action) && !this._argsMap.hasOwnProperty(action)) {\n        console.error('CallbackMapper: There is no callback registered with an action name of: ' + action);\n        return;\n      }\n\n      var callbacksCount = this._callbackMap[action].length;\n\n      for (var index = 0; index < callbacksCount; index++) {\n        this._callbackMap[action][index].apply(this, this._argsMap[action][index]);\n      }\n    }\n  }]);\n\n  return CalbackMapper;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/CallbackMapper.js?");

/***/ }),

/***/ "./src/js/Cookies.js":
/*!***************************!*\
  !*** ./src/js/Cookies.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Cookies; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Manage cookies with this class\r\n */\nvar Cookies =\n/*#__PURE__*/\nfunction () {\n  function Cookies() {\n    _classCallCheck(this, Cookies);\n  }\n\n  _createClass(Cookies, [{\n    key: \"get\",\n\n    /**\r\n     * Get a cookie's value\r\n     *\r\n     * @param {string} name\r\n     * @return {any}\r\n     */\n    value: function get(name) {\n      var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n      return v ? v[2] : null;\n    }\n    /**\r\n     * Set a cookies value\r\n     *\r\n     * @param {string} name\r\n     * @param {any} value\r\n     * @param {int|null} days or null for \"forever\"\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var days = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var d = new Date();\n      d.setTime(d.getTime() + (days ? 24 * 60 * 60 * 1000 * days : '9999999999'));\n      document.cookie = name + \"=\" + value + \";path=/;expires=\" + d.toGMTString();\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      this.set(name, '', -1);\n    }\n  }]);\n\n  return Cookies;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/Cookies.js?");

/***/ }),

/***/ "./src/js/DataRetriever.js":
/*!*********************************!*\
  !*** ./src/js/DataRetriever.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DataRetriever; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Does know how to retrieve data using get requests.\r\n *\r\n * It's like a rest client, but does not have all the features.\r\n */\nvar DataRetriever =\n/*#__PURE__*/\nfunction () {\n  function DataRetriever() {\n    _classCallCheck(this, DataRetriever);\n\n    //Initialize vars\n    this._headers = {};\n    this._request = null;\n    this._username = null;\n    this._password = null;\n    this._responseType = 'text';\n    this._open = this._open.bind(this);\n  }\n  /**\r\n   * Intializes a connection\r\n   *\r\n   * @private\r\n   * @return DataRetriever\r\n   */\n\n\n  _createClass(DataRetriever, [{\n    key: \"_init\",\n    value: function _init() {\n      this._request = new XMLHttpRequest();\n      return this;\n    }\n    /**\r\n     * Opens the connection and sets the request headers.\r\n     *\r\n     * @param method\r\n     * @param url\r\n     * @private\r\n     *\r\n     * @see setHeader\r\n     */\n\n  }, {\n    key: \"_open\",\n    value: function _open(method, url) {\n      if (typeof method !== \"string\") {\n        console.error('DataRetriever:_open The method must be a string');\n        return;\n      }\n\n      this._request.open(method.toUpperCase(), url, true, this._username, this._password);\n\n      for (var headerName in this._headers) {\n        if (!this._headers.hasOwnProperty(headerName)) continue;\n\n        this._request.setRequestHeader(headerName, this._headers[headerName]);\n      }\n\n      this._request.responseType = this._responseType;\n    }\n    /**\r\n     * Send the request to the server\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_send\",\n    value: function _send(successCallback, failureCallback) {\n      var self = this;\n\n      this._request.onreadystatechange = function () {\n        switch (self._request.readyState) {\n          // case XMLHttpRequest.UNSENT:\n          //     break;\n          // case XMLHttpRequest.OPENED:\n          //     break;\n          // case XMLHttpRequest.HEADERS_RECEIVED:\n          //     break;\n          // case XMLHttpRequest.LOADING:\n          //     break;\n          case XMLHttpRequest.DONE:\n            switch (self._request.status) {\n              case 200:\n                successCallback.call(self, self._request.response);\n                break;\n\n              default:\n                failureCallback.call(self, self._request.statusText);\n                break;\n            }\n\n            break;\n        }\n      };\n\n      this._request.send();\n    }\n    /**\r\n     * Set the expected response type\r\n     *\r\n     * @param {string} type\r\n     */\n\n  }, {\n    key: \"clearHeaders\",\n\n    /**\r\n     * Removes all headers you've set with setHeader\r\n     *\r\n     * @return DataRetriever\r\n     */\n    value: function clearHeaders() {\n      this._headers = {};\n    }\n    /**\r\n     * Sets / overrides a header for the next request\r\n     *\r\n     * @param {string} headerName\r\n     * @param {string} headerValues\r\n     * @return DataRetriever\r\n     */\n\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(headerName, headerValues) {\n      if (typeof headerName !== \"string\") {\n        console.error('Dataretriever:setHeader: The name of a header must be string');\n        return this;\n      }\n\n      if (typeof headerValues !== \"string\") {\n        console.error('Dataretriever:setHeader: The value(s) of a header must be string');\n        return this;\n      }\n\n      this._headers[headerName] = headerValues;\n      return this;\n    }\n    /**\r\n     *\r\n     * @param headerName\r\n     * @return {null|string}\r\n     */\n\n  }, {\n    key: \"getHeader\",\n    value: function getHeader(headerName) {\n      if (this._headers.hasOwnProperty(headerName)) return this._headers[headerName];\n      return null;\n    }\n    /**\r\n     * Sets the username for when performing a request\r\n     *\r\n     * @param value\r\n     */\n\n  }, {\n    key: \"get\",\n\n    /**\r\n     * Perform a HTTP Get request.\r\n     * Returns a promise that either resolves to a response. Or rejects with a status text\r\n     *\r\n     * @param {string} url\r\n     * @return {Promise}\r\n     */\n    value: function get(url) {\n      var self = this;\n\n      if (typeof url !== \"string\") {\n        console.error('DataRetriever:get The url must be a string');\n        return Promise.reject('DataRetriever:get The url must be a string'); //Return a rejected promise\n      }\n\n      return new Promise(function (resolve, reject) {\n        self._init();\n\n        self._open(\"GET\", url);\n\n        self._send(resolve, reject);\n      });\n    }\n  }, {\n    key: \"responseType\",\n    set: function set(type) {\n      var supportedTypes = ['text', 'arraybuffer', 'blob', 'document'];\n\n      if (typeof type !== \"string\" || supportedTypes.indexOf(type) === -1) {\n        console.error('Dataretriever:setResponseType: The type was not valid. It must be one of these: ' + supportedTypes.join(', '));\n        return this;\n      }\n\n      this._responseType = type;\n    }\n    /**\r\n     * Get the response type\r\n     */\n    ,\n    get: function get() {\n      return this._responseType;\n    }\n  }, {\n    key: \"username\",\n    set: function set(value) {\n      if (typeof value !== \"string\") {\n        console.error('DataRetriever:username The username must be a string');\n        return;\n      }\n\n      this._username = value;\n    }\n    /**\r\n     * Returns the username for the requests\r\n     * @return {null}\r\n     */\n    ,\n    get: function get() {\n      return this._username;\n    }\n    /**\r\n     * Sets a password for when performing a request\r\n     *\r\n     * @param value\r\n     */\n\n  }, {\n    key: \"password\",\n    set: function set(value) {\n      if (typeof value !== \"string\") {\n        console.error('DataRetriever:password The password must be a string');\n        return;\n      }\n\n      this._password = value;\n    }\n    /**\r\n     * Returns the password used for requests.\r\n     *\r\n     * @return {null}\r\n     */\n    ,\n    get: function get() {\n      return this._password;\n    }\n  }]);\n\n  return DataRetriever;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/DataRetriever.js?");

/***/ }),

/***/ "./src/js/ForestGuide.js":
/*!*******************************!*\
  !*** ./src/js/ForestGuide.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ForestGuide; });\n/* harmony import */ var _AudioPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AudioPlayer */ \"./src/js/AudioPlayer.js\");\n/* harmony import */ var _models_ConfigModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/ConfigModel */ \"./src/js/models/ConfigModel.js\");\n/* harmony import */ var _DataRetriever__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DataRetriever */ \"./src/js/DataRetriever.js\");\n/* harmony import */ var _models_GuideModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./models/GuideModel */ \"./src/js/models/GuideModel.js\");\n/* harmony import */ var _ActionProcessor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ActionProcessor */ \"./src/js/ActionProcessor.js\");\n/* harmony import */ var _Cookies__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Cookies */ \"./src/js/Cookies.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n/**\r\n * ForestGuide. Guides users through your app.\r\n */\n\nvar ForestGuide =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * The forest guide constructor\r\n   *\r\n   * @param {object} config\r\n   */\n  function ForestGuide(config) {\n    _classCallCheck(this, ForestGuide);\n\n    //Initialize dependencies\n    this._dataRetriever = new _DataRetriever__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this._config = new _models_ConfigModel__WEBPACK_IMPORTED_MODULE_1__[\"default\"](config);\n    this._audioPlayer = new _AudioPlayer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this._actionProcessor = new _ActionProcessor__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n    this._cookies = new _Cookies__WEBPACK_IMPORTED_MODULE_5__[\"default\"](); //initialize scalar variables\n\n    this._guideDataAttributeName = 'forest-guide'; //The data attribute name will hold the name of the guide that must be played when clicking the button\n\n    this._camelCasedGuideDataAttributeName = 'forestGuide';\n    this._presenceNotificationCookieName = 'presence_notification_closed'; //Will hold al guide buttons. When you click these, the guide will start playing.\n\n    this._guideButtons = null; //Further initialize the class by delegating to other methods\n\n    this._initializeGuideButtons();\n\n    this._addListenersToPresenceNotifications();\n\n    this._initializePresenceNotificationClasses();\n  }\n  /**\r\n   * Scans the document for elements which match the guideButtonSelector.\r\n   * And links them to this class so that when they are clicked the appropriate guide will\r\n   * be loaded, by using the attributes value.\r\n   *\r\n   * @private\r\n   */\n\n\n  _createClass(ForestGuide, [{\n    key: \"_initializeGuideButtons\",\n    value: function _initializeGuideButtons() {\n      var self = this;\n      var selector = \"[data-\" + this._guideDataAttributeName + \"]\";\n      this._guideButtons = document.querySelectorAll(selector);\n\n      this._guideButtons.forEach(function (guideButton) {\n        guideButton.addEventListener('click', self._guideButtonClicked.bind(self));\n      });\n    }\n    /**\r\n     * Triggered when a guide button is clicked\r\n     *\r\n     * @param {MouseEvent} mouseEvent\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_guideButtonClicked\",\n    value: function _guideButtonClicked(mouseEvent) {\n      var self = this;\n      var button = mouseEvent.target;\n      mouseEvent.preventDefault();\n\n      if (!this._guideDataAttributeName in button.dataset) {\n        console.error('Could process a click on a ForestGuide guide button since it did not contain the data attribute \"data-' + this._guideDataAttributeName + '\" anymore.');\n      }\n\n      var guideName = button.dataset[this._camelCasedGuideDataAttributeName];\n\n      this._dataRetriever.get(this._config.rootUrl + guideName + '.json').then(function (response) {\n        var json = {};\n\n        try {\n          json = JSON.parse(response);\n        } catch (e) {\n          console.error('ForestGuide: The json as denoted in the guide \"' + guideName + '\" was invalid. ' + e.message);\n          return;\n        }\n\n        var guideModel = _models_GuideModel__WEBPACK_IMPORTED_MODULE_3__[\"default\"].fromJson(json);\n\n        self._startOrStopGuidance(guideModel, button);\n      }).catch(function (reason) {\n        console.error('ForestGuide: Could not retrieve guide \"' + guideName + '\" because of an error: ' + reason);\n      });\n    }\n    /**\r\n     * @param {GuideModel} guide\r\n     * @param button The guide button that was clicked and eventually triggered this method\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_startOrStopGuidance\",\n    value: function _startOrStopGuidance(guide, button) {\n      var self = this;\n\n      self._actionProcessor.loadGuide(guide);\n\n      if (this._audioPlayer.isPlaying() === false) {\n        this._audioPlayer.onLoading(function () {\n          button.classList.add(self._config.loadingClass);\n          button.classList.remove(self._config.playingClass);\n        }).onPlay(function () {\n          button.classList.remove(self._config.loadingClass);\n          button.classList.add(self._config.playingClass);\n        }).onPause(function () {\n          button.classList.remove(self._config.loadingClass);\n          button.classList.remove(self._config.playingClass);\n\n          self._actionProcessor.deactivate();\n        }).onPlayProgress(function () {\n          self._actionProcessor.tick(self._audioPlayer.getCurrentTime());\n        }).onFinish(function () {\n          button.classList.remove(self._config.loadingClass);\n          button.classList.remove(self._config.playingClass);\n        }).onStopped(function () {\n          button.classList.remove(self._config.loadingClass);\n          button.classList.remove(self._config.playingClass);\n\n          self._actionProcessor.deactivate();\n        });\n\n        this._audioPlayer.load(this._config.rootUrl + guide.soundFile);\n\n        this._audioPlayer.play();\n      } else {\n        this._audioPlayer.stop(); // this._audioPlayer.pause(); //Also a possibility to use.\n\n      }\n    }\n    /**\r\n     * Add listeners to close buttons in notifications that will either add a class to them to \"close\" them.\r\n     * Or if the class isn't specified, will remove them.\r\n     * \r\n     * @private\r\n     */\n\n  }, {\n    key: \"_addListenersToPresenceNotifications\",\n    value: function _addListenersToPresenceNotifications() {\n      var _this = this;\n\n      var notificationElements = document.querySelectorAll(this._config.presenceNotificationSelector);\n      notificationElements.forEach(\n      /** @param {HTMLElement} notification*/\n      function (notification) {\n        var closeButton = notification.querySelector(_this._config.presenceNotificationCloseButtonSelector);\n        if (!closeButton) return;\n        console.log('add click handler');\n        closeButton.addEventListener('click', function () {\n          if (_this._config.presenceNotificationCloseClassToAdd !== '') notification.classList.add(_this._config.presenceNotificationCloseClassToAdd);\n          if (_this._config.presenceNotificationCloseClassToRemove === '' && notification.parentElement) notification.parentElement.removeChild(notification);else notification.classList.remove(_this._config.presenceNotificationCloseClassToRemove);\n\n          _this._cookies.set(_this._presenceNotificationCookieName, 1, null);\n        });\n      });\n    }\n  }, {\n    key: \"_initializePresenceNotificationClasses\",\n    value: function _initializePresenceNotificationClasses() {\n      var _this2 = this;\n\n      var notificationElements = document.querySelectorAll(this._config.presenceNotificationSelector);\n\n      var presenceNotified = this._cookies.get(this._presenceNotificationCookieName);\n\n      if (presenceNotified) {\n        console.info('already notified the user that forest guide is present. Not adding or removing classes to notifications');\n        return;\n      }\n\n      notificationElements.forEach(\n      /** @param {HTMLElement} notification*/\n      function (notification) {\n        if (_this2._config.presenceNotificationClassToAdd !== '') notification.classList.add(_this2._config.presenceNotificationClassToAdd);\n        if (_this2._config.presenceNotificationClassToRemove !== '') notification.classList.remove(_this2._config.presenceNotificationClassToRemove);\n      });\n    }\n  }]);\n\n  return ForestGuide;\n}(); //Link forest guide to the window object (global namespace) so that other scripts can utilize it.\n\n\n\nwindow.ForestGuide = ForestGuide;\n\n//# sourceURL=webpack:///./src/js/ForestGuide.js?");

/***/ }),

/***/ "./src/js/actions/AddClass.js":
/*!************************************!*\
  !*** ./src/js/actions/AddClass.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddClass; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * AddClass action.\r\n *\r\n * Adds a class to an element.\r\n */\nvar AddClass =\n/*#__PURE__*/\nfunction () {\n  function AddClass() {\n    _classCallCheck(this, AddClass);\n  }\n\n  _createClass(AddClass, null, [{\n    key: \"activate\",\n\n    /**\r\n     * Activates the action\r\n     *\r\n     * @param {object} options\r\n     * @return {boolean}\r\n     */\n    value: function activate(options) {\n      var validatedOptions = AddClass._validateOptions(options);\n\n      if (!validatedOptions) return false;\n      var elements = document.querySelectorAll(validatedOptions.selector);\n      elements.forEach(\n      /**\r\n       * @param {Element} element\r\n       */\n      function (element) {\n        if (element.classList.contains(validatedOptions.class)) return;\n        element.classList.add(validatedOptions.class);\n      });\n    }\n    /**\r\n     * De-activates that action\r\n     *\r\n     * @param options\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(options) {\n      var validatedOptions = AddClass._validateOptions(options);\n\n      if (!validatedOptions) return false;\n      var elements = document.querySelectorAll(validatedOptions.selector);\n      elements.forEach(\n      /**\r\n       * @param {Element} element\r\n       */\n      function (element) {\n        element.classList.remove(validatedOptions.class);\n      });\n    }\n    /**\r\n     * Validates given options object. And if needed, set defaults on that object.\r\n     *\r\n     * @param {object} options\r\n     * @return {boolean|object} Boolean false if not valid. options object when valid\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_validateOptions\",\n    value: function _validateOptions(options) {\n      if (_typeof(options) !== 'object') {\n        console.error('AddClass: The options parameter was not an expected object.');\n        return false;\n      }\n\n      if (!options.hasOwnProperty('selector') || typeof options.selector !== 'string') {\n        console.error('AddClass: The options object does not have an string property called selector');\n        return false;\n      }\n\n      if (!options.hasOwnProperty('class') || typeof options.selector !== 'string') options['class'] = 'fg-blink-border';\n      return options;\n    }\n  }]);\n\n  return AddClass;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/actions/AddClass.js?");

/***/ }),

/***/ "./src/js/actions/ScrollToElement.js":
/*!*******************************************!*\
  !*** ./src/js/actions/ScrollToElement.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ScrollToElement; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * ScrollToElement action.\r\n *\r\n * Scrolls to an element that matches a certain selector\r\n */\nvar ScrollToElement =\n/*#__PURE__*/\nfunction () {\n  function ScrollToElement() {\n    _classCallCheck(this, ScrollToElement);\n  }\n\n  _createClass(ScrollToElement, null, [{\n    key: \"activate\",\n\n    /**\r\n     * Activates the action\r\n     *\r\n     * @param {object} options\r\n     * @return {boolean}\r\n     */\n    value: function activate(options) {\n      var validatedOptions = ScrollToElement._validateOptions(options);\n\n      if (!validatedOptions) return false;\n      var element = document.querySelector(validatedOptions.selector);\n      if (!element) return false;\n      element.scrollIntoView({\n        behavior: options.behaviour,\n        block: options.vertical_alignment,\n        inline: options.horizontal_alignment\n      });\n    }\n    /**\r\n     * De-activates that action\r\n     *\r\n     * @param options\r\n     * @return {boolean}\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate(options) {} //Not implemented. Method must be present for the framework\n\n    /**\r\n     * Validates given options object. And if needed, set defaults on that object.\r\n     *\r\n     * @param {object} options\r\n     * @return {boolean|object} Boolean false if not valid. options object when valid\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_validateOptions\",\n    value: function _validateOptions(options) {\n      if (_typeof(options) !== 'object') {\n        console.error('ScrollToElement: The options parameter was not an expected object.');\n        return false;\n      }\n\n      if (!options.hasOwnProperty('selector') || typeof options.selector !== 'string') {\n        console.error('ScrollToElement: The options object does not have an string property called selector');\n        return false;\n      }\n\n      if (!options.hasOwnProperty('behavior') || typeof options.behavior !== 'string') options['behaviour'] = \"smooth\";\n      if (['smooth', 'auto'].indexOf(options.behavior) === -1) options['behaviour'] = 'smooth';\n      if (!options.hasOwnProperty('horizontal_alignment') || typeof options.horizontal_alignment !== 'string') options['horizontal_alignment'] = \"nearest\";\n      if ([\"start\", \"center\", \"end\", \"nearest\"].indexOf(options.horizontal_alignment) === -1) options['horizontal_alignment'] = \"nearest\";\n      if (!options.hasOwnProperty('vertical_alignment') || typeof options.vertical_alignment !== 'string') options['vertical_alignment'] = \"center\";\n      if ([\"start\", \"center\", \"end\", \"nearest\"].indexOf(options.vertical_alignment) === -1) options['horizontal_alignment'] = \"center\";\n      return options;\n    }\n  }]);\n\n  return ScrollToElement;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/actions/ScrollToElement.js?");

/***/ }),

/***/ "./src/js/models/ActionModel.js":
/*!**************************************!*\
  !*** ./src/js/models/ActionModel.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ActionModel; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Defines Action data that belongs to a Cue.\r\n *\r\n * @see CueModel\r\n */\nvar ActionModel =\n/*#__PURE__*/\nfunction () {\n  function ActionModel() {\n    _classCallCheck(this, ActionModel);\n\n    this._name = '';\n    this._options = {};\n    this._instance = null; //\n  }\n  /**\r\n   * Create a new instance from a json object\r\n   *\r\n   * @param object\r\n   */\n\n\n  _createClass(ActionModel, [{\n    key: \"name\",\n\n    /**\r\n     * @return {string}\r\n     */\n    get: function get() {\n      return this._name;\n    }\n    /**\r\n     * @return {{}}\r\n     */\n\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(object) {\n      var trueOrError = ActionModel.validate(object);\n\n      if (trueOrError !== true) {\n        console.error(trueOrError);\n        return null;\n      }\n\n      var instance = new ActionModel();\n      instance._name = object.name;\n      instance._options = object.options;\n      return instance;\n    }\n    /**\r\n     * Returns true if the object has valid action data. And a string containing errors if not valid.\r\n     *\r\n     * @param object\r\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(object) {\n      if (typeof object === \"undefined\") return \"Action: The action is not valid because it was undefined\";\n      if (!object.hasOwnProperty('name') || typeof object.name !== \"string\") return \"Action: The action was not valid. It must contain a string property called name\";\n      if (!object.hasOwnProperty('options') || _typeof(object.options) !== \"object\") return \"Action: The action was not valid. It must contain an object property called options\";\n      return true;\n    }\n  }]);\n\n  return ActionModel;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/models/ActionModel.js?");

/***/ }),

/***/ "./src/js/models/ConfigModel.js":
/*!**************************************!*\
  !*** ./src/js/models/ConfigModel.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ConfigModel; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * The config object holds configuration data for ForestGuide itself.\r\n * It does not contain guidance data.\r\n */\nvar ConfigModel =\n/*#__PURE__*/\nfunction () {\n  function ConfigModel(configObject) {\n    _classCallCheck(this, ConfigModel);\n\n    if (typeof configObject === 'undefined') configObject = {};\n    this._rootUrl = configObject.hasOwnProperty('rootUrl') && typeof configObject.rootUrl === \"string\" ? configObject.rootUrl : 'forestguide/';\n    if (this._rootUrl.substr(this.rootUrl.length - 1) !== '/') this._rootUrl += '/';\n    this._loadingClass = configObject.hasOwnProperty('loadingClass') && typeof configObject.loadingClass === \"string\" ? configObject.loadingClass : 'loading';\n    this._playingClass = configObject.hasOwnProperty('playingClass') && typeof configObject.playingClass === \"string\" ? configObject.playingClass : 'playing';\n    this._presence_notification_selector = configObject.hasOwnProperty('presenceNotificationSelector') && typeof configObject.presenceNotificationSelector === \"string\" ? configObject.presenceNotificationSelector : '.fgPresenceNotification';\n    this._presence_notification_close_button_selector = configObject.hasOwnProperty('presenceNotificationCloseButtonSelector') && typeof configObject.presenceNotificationCloseButtonSelector === \"string\" ? configObject.presenceNotificationCloseButtonSelector : '.close';\n    this._presence_notification_class_to_remove = configObject.hasOwnProperty('presenceNotificationClassToRemove') && typeof configObject.presenceNotificationClassToRemove === \"string\" ? configObject.presenceNotificationClassToRemove : '';\n    this._presence_notification_class_to_add = configObject.hasOwnProperty('presenceNotificationClassToAdd') && typeof configObject.presenceNotificationClassToAdd === \"string\" ? configObject.presenceNotificationClassToAdd : '';\n    this._presence_notification_close_class_to_remove = configObject.hasOwnProperty('presenceNotificationCloseClassToRemove') && typeof configObject.presenceNotificationCloseClassToRemove === \"string\" ? configObject.presenceNotificationCloseClassToRemove : '';\n    this._presence_notification_close_class_to_add = configObject.hasOwnProperty('presenceNotificationCloseClassToAdd') && typeof configObject.presenceNotificationCloseClassToAdd === \"string\" ? configObject.presenceNotificationCloseClassToAdd : '';\n  }\n  /**\r\n   * The url where all ForestGuide data can be retrieved from\r\n   *\r\n   * @returns {string}\r\n   */\n\n\n  _createClass(ConfigModel, [{\n    key: \"rootUrl\",\n    get: function get() {\n      return this._rootUrl;\n    }\n    /**\r\n     * The class to add to buttons when data is loading\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"loadingClass\",\n    get: function get() {\n      return this._loadingClass;\n    }\n    /**\r\n     * The class to add to buttons when they are playing\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"playingClass\",\n    get: function get() {\n      return this._playingClass;\n    }\n    /**\r\n     * The class to select notification HTMLElements that\r\n     * hold a notification to hint the user of the presence of forest guide.\r\n     * The notification must tell the user how he can get started with forest guide.\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"presenceNotificationSelector\",\n    get: function get() {\n      return this._presence_notification_selector;\n    }\n    /**\r\n     * The selector to select close buttons in presence notification HTMLElements.\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"presenceNotificationCloseButtonSelector\",\n    get: function get() {\n      return this._presence_notification_close_button_selector;\n    }\n    /**\r\n     * The class to remove from the presence notification HTMLElements when they are closed.\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"presenceNotificationCloseClassToRemove\",\n    get: function get() {\n      return this._presence_notification_close_class_to_remove;\n    }\n    /**\r\n     * The class to add to the presence notification HTMLElements when they are closed.\r\n     * If you don't specify the class, the notification will be removed from the dom.\r\n     *\r\n     * @return {string|*}\r\n     */\n\n  }, {\n    key: \"presenceNotificationCloseClassToAdd\",\n    get: function get() {\n      return this._presence_notification_close_class_to_add;\n    }\n    /**\r\n     * The class to remove from presence notification HTMLElements when they need to be visible\r\n     *\r\n     * @return {string|string}\r\n     */\n\n  }, {\n    key: \"presenceNotificationClassToRemove\",\n    get: function get() {\n      return this._presence_notification_class_to_remove;\n    }\n    /**\r\n     * The class to add from presence notification HTMLElements when they need to be visible\r\n     *\r\n     * @return {string|string}\r\n     */\n\n  }, {\n    key: \"presenceNotificationClassToAdd\",\n    get: function get() {\n      return this._presence_notification_class_to_add;\n    }\n  }]);\n\n  return ConfigModel;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/models/ConfigModel.js?");

/***/ }),

/***/ "./src/js/models/CueModel.js":
/*!***********************************!*\
  !*** ./src/js/models/CueModel.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CueModel; });\n/* harmony import */ var _ActionModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ActionModel */ \"./src/js/models/ActionModel.js\");\n/* harmony import */ var _GuideModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GuideModel */ \"./src/js/models/GuideModel.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n/**\r\n * Defines Cue data that belongs to a Guide\r\n *\r\n * @see GuideModel\r\n */\n\nvar CueModel =\n/*#__PURE__*/\nfunction () {\n  function CueModel() {\n    _classCallCheck(this, CueModel);\n\n    this._start = 0;\n    this._end = 0;\n    this._actions = [];\n  }\n  /**\r\n   * Create a new instance from a json object\r\n   *\r\n   * @param object\r\n   */\n\n\n  _createClass(CueModel, [{\n    key: \"start\",\n\n    /**\r\n     * @return {number}\r\n     */\n    get: function get() {\n      return this._start;\n    }\n    /**\r\n     * @return {number}\r\n     */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      return this._end;\n    }\n    /**\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"selector\",\n    get: function get() {\n      return this._selector;\n    }\n    /**\r\n     * @return {ActionModel[]}\r\n     */\n\n  }, {\n    key: \"actions\",\n    get: function get() {\n      return this._actions;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(object) {\n      var trueOrError = CueModel.validate(object);\n\n      if (trueOrError !== true) {\n        console.error(trueOrError);\n        return null;\n      }\n\n      var instance = new CueModel();\n      instance._start = object.start;\n      instance._end = object.end;\n      instance._actions = object.actions;\n      return instance;\n    }\n    /**\r\n     * Returns true if the object has valid cue data. And a string containing errors if not valid.\r\n     *\r\n     * @param object\r\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(object) {\n      if (typeof object === \"undefined\") return \"Cue: The cue is not valid because it was undefined\";\n      if (!object.hasOwnProperty('start') || typeof object.start !== \"number\") return \"Cue: The cue was not valid. It must contain a number property called start\";\n      if (!object.hasOwnProperty('end') || typeof object.end !== \"number\") return \"Cue: The cue was not valid. It must contain a number property called end\";\n      if (!object.hasOwnProperty('actions') || !Array.isArray(object.actions)) return \"Cue: The cue was not valid. It must contain an array property called actions\";\n      var actionCount = object.actions.length;\n\n      for (var index = 0; index < actionCount; index++) {\n        var action = object.actions[index];\n        var trueOrError = _ActionModel__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validate(action);\n        if (trueOrError !== true) return trueOrError;\n      }\n\n      return true;\n    }\n  }]);\n\n  return CueModel;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/models/CueModel.js?");

/***/ }),

/***/ "./src/js/models/GuideModel.js":
/*!*************************************!*\
  !*** ./src/js/models/GuideModel.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GuideModel; });\n/* harmony import */ var _CueModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CueModel */ \"./src/js/models/CueModel.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\r\n * Defines Guide data.\r\n */\n\nvar GuideModel =\n/*#__PURE__*/\nfunction () {\n  function GuideModel() {\n    _classCallCheck(this, GuideModel);\n\n    this._soundFile = '';\n    this._cues = [];\n  }\n  /**\r\n   * Create a new instance from a json object\r\n   *\r\n   * @param object\r\n   * @return {null|GuideModel}\r\n   */\n\n\n  _createClass(GuideModel, [{\n    key: \"soundFile\",\n\n    /**\r\n     * @return {string}\r\n     */\n    get: function get() {\n      return this._soundFile;\n    }\n    /**\r\n     * @return {CueModel[]}\r\n     */\n\n  }, {\n    key: \"cues\",\n    get: function get() {\n      return this._cues;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(object) {\n      var trueOrError = GuideModel.validate(object);\n\n      if (trueOrError !== true) {\n        console.error(trueOrError);\n        return null;\n      }\n\n      var instance = new GuideModel();\n      instance._soundFile = object.soundFile;\n      instance._cues = object.cues;\n      return instance;\n    }\n    /**\r\n     * Returns true if the given object is a valid Guide. Or a string containing errors if not valid\r\n     *\r\n     * @param object\r\n     * @return {boolean|string}\r\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(object) {\n      if (typeof object === \"undefined\") return \"Guide: The guide is not valid because it was undefined\";\n      if (!object.hasOwnProperty(\"soundFile\") || typeof object.soundFile !== \"string\") return \"Guide: The guide is not valid. It must have a string property called soundFile.\";\n      if (!object.hasOwnProperty(\"cues\") || !Array.isArray(object.cues)) return \"Guide: The guide is not valid. It must have an array property called 'cues'\";\n      var cueCount = object.cues.length;\n\n      for (var index = 0; index < cueCount; index++) {\n        var cue = object.cues[index];\n        var trueOrError = _CueModel__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validate(cue);\n        if (trueOrError !== true) return trueOrError;\n      }\n\n      return true;\n    }\n  }]);\n\n  return GuideModel;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/models/GuideModel.js?");

/***/ })

/******/ });